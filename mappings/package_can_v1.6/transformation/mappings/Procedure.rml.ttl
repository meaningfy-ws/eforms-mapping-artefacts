#--- MG-Procedure ---
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix locn: <http://www.w3.org/ns/locn#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix epd: <http://data.europa.eu/a4g/resource/> .
@prefix epo: <http://data.europa.eu/a4g/ontology#> .
@prefix epo-not: <http://data.europa.eu/a4g/ontology#>.
@prefix cv: <http://data.europa.eu/m8g/> .
@prefix cccev: <http://data.europa.eu/m8g/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix cpov: <http://data.europa.eu/m8g/> .
@prefix	foaf: <http://xmlns.com/foaf/0.1/> .
@prefix time: <http://www.w3.org/2006/time#>.
@prefix adms: <http://www.w3.org/ns/adms#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix fnml:   <http://semweb.mmlab.be/ns/fnml#> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix idlab-fn: <http://example.com/idlab/function/> .
@prefix tedm: <http://data.europa.eu/a4g/mapping/sf-rml/> .
@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xs:   <http://www.w3.org/2001/XMLSchema#> .
@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd:  <http://www.w3.org/2001/XMLSchema#> .

tedm:MG-Procedure_ND-DirectAward a rr:TriplesMap ;
    rdfs:label "MG-Procedure";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:TenderingProcess/cac:ProcessJustification[cbc:ProcessReasonCode/@listName='direct-award-justification']";
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rdfs:label "ND-DirectAward";
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_Procedure_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
#            rml:reference "if (exists(cac:ProcessJustification[cbc:ProcessReasonCode/@listName='direct-award-justification'])) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_Procedure_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class epo:Procedure
        ] ;

    rr:predicateObjectMap
        [
            rr:predicate epo:isSubjectToProcedureSpecificTerm  ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:MG-DirectAwardTerm-isSubjectToProcedureSpecificTerm-Procedure_ND-DirectAward ;
                    rr:joinCondition [
                        rr:child  "path(.)" ;
                        rr:parent "path(.)" ;
                    ] ;
                ]
        ] ;
    .

tedm:MG-DirectAwardTerm-isSubjectToProcedureSpecificTerm-Procedure_ND-DirectAward a rr:TriplesMap ;
    rdfs:label "MG-DirectAwardTerm";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:TenderingProcess/cac:ProcessJustification[cbc:ProcessReasonCode/@listName='direct-award-justification']";
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            # TODO Add to source
            # TODO max sdk 1.9.1
            tedm:minSDKVersion "1.10" ;
            rdfs:label "ND-DirectAward";
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_DirectAwardTerm_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class epo:DirectAwardTerm
        ] ;
     rr:predicateObjectMap
        [
            # TODO Add to source
            rdfs:label "BT-136-Procedure";
            rdfs:comment "Direct Award Justification Code of MG-DirectAwardTerm under ND-DirectAward";
            rr:predicate  epo:hasDirectAwardJustification   ;
            rr:objectMap
                [
                    rdfs:label "at-voc:direct-award-justification" ;
                    rr:parentTriplesMap tedm:direct-award-justification ;
                    rr:joinCondition [
                        rr:child "if(not( exists(../efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='dir-awa-jus']) and cbc:ProcessReasonCode/text() = 'unpublished')) then cbc:ProcessReasonCode else null" ;
                        rr:parent "code.value" ;
                    ] ;
                ] ;
        ]   ;
    rr:predicateObjectMap
        [
            # TODO Add to source
            rdfs:label "BT-135-Procedure";
            rdfs:comment "Direct Award Justification Text of MG-DirectAwardTerm under ND-DirectAward";
            rr:predicate  epo:hasDirectAwardJustification   ;
            rr:objectMap
                [
                    rdfs:label "BT-135-Procedure-Language";
                    rdfs:comment "Language of Direct Award Justification Text of MG-DirectAwardTerm under ND-DirectAward";
                    rml:reference "if (not(exists(../efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='dir-awa-tex']) and cbc:ProcessReason/text() = 'unpublished')) then cbc:ProcessReason else null";
                    rml:languageMap [
                        fnml:functionValue [
                            rr:predicateObjectMap [
                                rr:predicate idlab-fn:str ;
                                rr:objectMap [ rml:reference "if (not(exists(../efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='dir-awa-tex']) and cbc:ProcessReason/text() = 'unpublished')) then cbc:ProcessReason/@languageID else null" ]
                            ] ,
                            tedm:idlab-fn_executes_lookup ,
                            tedm:idlab-fn_inputFile_language ,
                            tedm:idlab-fn_fromColumn_code ,
                            tedm:idlab-fn_toColumn_code
                        ]
                    ] ;
                ] ;
        ]   ;
     rr:predicateObjectMap
        [
            rr:predicate epo:refersToPreviousProcedure  ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:MG-Procedure-refersToPreviousProcedure-DirectAwardTerm-isSubjectToProcedureSpecificTerm-Procedure_ND-DirectAward ;
                    rr:joinCondition [
                        rr:child  "path(.)" ;
                        rr:parent "path(.)" ;
                    ] ;
                ]
        ] ;
    .

tedm:MG-Procedure-refersToPreviousProcedure-DirectAwardTerm-isSubjectToProcedureSpecificTerm-Procedure_ND-DirectAward a rr:TriplesMap ;
    rdfs:label "MG-Procedure";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:TenderingProcess/cac:ProcessJustification[cbc:ProcessReasonCode/@listName='direct-award-justification']";
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rdfs:label "ND-DirectAward";
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_Procedure_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
#            rml:reference "if (exists(cac:ProcessJustification[cbc:ProcessReasonCode/@listName='direct-award-justification'])) then 'http://data.europa.eu/a4g/resource/id_' || replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-') || '_Procedure_' || unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw') else null" ;
            rr:class epo:Procedure
        ] ;

     rr:predicateObjectMap
        [
            rr:predicate adms:identifier  ;
            rr:objectMap
                [
                    rr:parentTriplesMap tedm:MG-Identifier-identifier-Procedure-refersToPreviousProcedure-DirectAwardTerm-isSubjectToProcedureSpecificTerm-Procedure_ND-DirectAward ;
                    rr:joinCondition [
                        rr:child  "path(.)" ;
                        rr:parent "path(.)" ;
                    ] ;
                ]
        ] ;
    .

tedm:MG-Identifier-identifier-Procedure-refersToPreviousProcedure-DirectAwardTerm-isSubjectToProcedureSpecificTerm-Procedure_ND-DirectAward a rr:TriplesMap ;
    rdfs:label "MG-Identifier";
    rml:logicalSource
        [
            rml:source "data/source.xml" ;
            rml:iterator "/*/cac:TenderingProcess/cac:ProcessJustification[cbc:ProcessReasonCode/@listName='direct-award-justification']";
            rml:referenceFormulation ql:XPath
        ] ;
    rr:subjectMap
        [
            rdfs:label "ND-DirectAward";
            rr:template "http://data.europa.eu/a4g/resource/id_{replace(replace(/*/cbc:ID[@schemeName='notice-id'], ' ', '-' ), '/' , '-')}_Identifier_{unparsed-text('https://digest-api.ted-data.eu/api/v1/hashing/fn/uuid/' || encode-for-uri(path()) || '?response_type=raw')}" ;
            rr:class adms:Identifier
        ] ;
    rr:predicateObjectMap
        [
            rdfs:label "BT-1252-Procedure" ;
            rdfs:label "Direct Award Justification Previous Procedure Identifier of MG-Identifier under ND-DirectAward" ;
            rr:predicate skos:notation ;
            rr:objectMap
                [
                    rml:reference "if (not( exists(../efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='dir-awa-pre']) and cbc:Description/text() = 'unpublished' )) then cbc:Description else null";
                ] ;
        ];
     rr:predicateObjectMap
        [
            rdfs:label "BT-1252-Procedure-Scheme" ;
            rdfs:comment "Scheme of MG-Identifier under ND-DirectAward" ;
            rr:predicate epo:hasScheme ;
            rr:objectMap
                [
                    rml:reference "if (not( exists(../efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='dir-awa-pre']) and cbc:Description/text() = 'unpublished' )) then cbc:Description/@schemeName else null";
                ] ;
            ];
    .
